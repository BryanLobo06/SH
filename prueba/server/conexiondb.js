import dotenv from "dotenv";
import mysql from "mysql2/promise"

dotenv.config();  // Cargar variables de .env

export const pool = mysql.createPool({
    host: process.env.DB_HOST,
    database: process.env.DB_NAME,
    port: process.env.DB_PORT,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    connectionLimit: 10,        // M√°ximo n√∫mero de conexiones activas al mismo tiempo
    waitForConnections: true,   // Si se alcanza el l√≠mite, las nuevas peticiones esperan su turno
    queueLimit: 0               // N√∫mero m√°ximo de peticiones en espera (0 = sin l√≠mite)
})

/**
 * Funci√≥n para probar la conexi√≥n con la base de datos.
 * Realiza una consulta simple para verificar que la conexi√≥n funciona.
 * 
 * @returns {boolean} True si la conexi√≥n es exitosa, false en caso de error.
 */
export async function probarConexionConLaBaseDeDatos() {
    try {
        console.log('üîç Probando conexi√≥n a la base de datos...');
        
        const connection = await pool.getConnection();
        
        // Realizar una consulta simple para verificar que la conexi√≥n funciona
        const [rows] = await connection.execute('SELECT 1 as test');
        
        if (rows && rows[0] && rows[0].test === 1) {
            console.log('‚úÖ Conexi√≥n a la base de datos exitosa');
            console.log(`üìä Base de datos: ${process.env.DB_NAME}`);
            console.log(`üè† Host: ${process.env.DB_HOST}:${process.env.DB_PORT}`);
        }
        
        connection.release();
        return true;
        
    } catch (error) {
        console.error('‚ùå Error al conectar con la base de datos:', error.message);
        console.error('üîß Verifica tu configuraci√≥n en el archivo .env');
        return false;
    }
}

probarConexionConLaBaseDeDatos();